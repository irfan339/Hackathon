[{"/Users/sulmham/Desktop/Hackathon/hackstart/src/index.js":"1","/Users/sulmham/Desktop/Hackathon/hackstart/src/App.js":"2","/Users/sulmham/Desktop/Hackathon/hackstart/src/reportWebVitals.js":"3","/Users/sulmham/Desktop/Hackathon/hackstart/src/Components/SelectionPage.js":"4","/Users/sulmham/Desktop/Hackathon/hackstart/src/redux/store.js":"5","/Users/sulmham/Desktop/Hackathon/hackstart/src/redux/MMGL/mmglAction.js":"6","/Users/sulmham/Desktop/Hackathon/hackstart/src/redux/MMGL/mmglReducer.js":"7","/Users/sulmham/Desktop/Hackathon/hackstart/src/Components/QuestionAnswersTemplate.js":"8","/Users/sulmham/Desktop/Hackathon/hackstart/src/Components/GLSetTable.js":"9"},{"size":547,"mtime":1608014675170,"results":"10","hashOfConfig":"11"},{"size":11527,"mtime":1608130616246,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607924180789,"results":"13","hashOfConfig":"11"},{"size":1901,"mtime":1608033196273,"results":"14","hashOfConfig":"11"},{"size":337,"mtime":1608031957322,"results":"15","hashOfConfig":"11"},{"size":492,"mtime":1608032905397,"results":"16","hashOfConfig":"11"},{"size":451,"mtime":1608028166169,"results":"17","hashOfConfig":"11"},{"size":5629,"mtime":1608122101828,"results":"18","hashOfConfig":"11"},{"size":3530,"mtime":1608125089506,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1exsqw8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"22"},"/Users/sulmham/Desktop/Hackathon/hackstart/src/index.js",[],["46","47"],"/Users/sulmham/Desktop/Hackathon/hackstart/src/App.js",[],"/Users/sulmham/Desktop/Hackathon/hackstart/src/reportWebVitals.js",[],"/Users/sulmham/Desktop/Hackathon/hackstart/src/Components/SelectionPage.js",["48"],"import React, {Component} from 'react';\nimport {  loadMarketplace, loadMerchant, loadGl} from '../redux/MMGL/mmglAction';\nimport {connect} from 'react-redux';\n\nclass SelectionPage extends Component{\n    constructor(props) {\n        super(props);\n    }\n\n\n    render(){\n        const {loadMarketplace}=this.props;\n        console.log(this.props);\n        return(\n            <div class=\"container\">\n               <select class=\"browser-default custom-select custom-select-lg mb-3\">\n                    <option disabled selected hidden>Select Marketplace</option>\n                    <option value=\"1\">US</option>\n                    <option value=\"2\">Amazon Fresh</option>\n                    <option value=\"3\">Mendel</option>\n                </select>\n                <select  class=\"browser-default custom-select custom-select-lg mb-3\">\n                    <option disabled selected hidden>Select Merchant</option>\n                    <option value=\"1\">Amazon Fresh</option>\n                    <option value=\"2\">Amazon Lite</option>\n                    <option value=\"3\">Amazon GO</option>\n                </select>\n                <select  class=\"browser-default custom-select custom-select-lg mb-3\">\n                    <option disabled selected hidden>Select Product Group</option>\n                    <option value=\"1\">Apparel</option>\n                    <option value=\"2\">Furniture</option>\n                    <option value=\"3\">Grocery</option>\n                </select>\n                <button type=\"button\" class=\"btn btn-primary btn-lg\" onClick={loadMarketplace(\"okkk\")}>Check</button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({MarketplaceMerchantGL: state.MarketplaceMerchantGL});\nconst mapDispatchToProps =  {  \n        loadMarketplace,\n        loadMerchant,\n        loadGl\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectionPage);",["49","50"],"/Users/sulmham/Desktop/Hackathon/hackstart/src/redux/store.js",["51","52"],"import { createStore, applyMiddleware } from 'redux'\nimport MarketplaceMerchantGL from './MMGL/mmglReducer';\n//import compose from 'helper/redux-dev-tools';\n// import thunk from 'redux-thunk';\n\n// const middleware = applyMiddleware(thunk);\nconst initialState = {};\nconst store = createStore(MarketplaceMerchantGL);\n\nexport default store;",["53","54"],"/Users/sulmham/Desktop/Hackathon/hackstart/src/redux/MMGL/mmglAction.js",[],"/Users/sulmham/Desktop/Hackathon/hackstart/src/redux/MMGL/mmglReducer.js",["55"],"import {\n    LOAD_MARKETPLACE,\n    LOAD_MERCHANT,\n    LOAD_GL\n} from \"./mmglAction\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case LOAD_MARKETPLACE:\n            return {...state, marketPlace: action.value };\n        case LOAD_MERCHANT:\n            return {...state, merchant: action.value };\n        case LOAD_GL:\n            return {...state, gl: action.value };\n        default:\n            return state;\n    }\n};","/Users/sulmham/Desktop/Hackathon/hackstart/src/Components/QuestionAnswersTemplate.js",["56"],"import React, {Component} from 'react';\nimport './Welcome.css';\n\nclass QuestionAnswersTemplate extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n            defaultRadiovalue: 0,\n            defaultCheckboxValues:[0],\n            type: props.type,\n            stage: props.stage,\n            description:props.description,\n            question: props.question,\n            answer:props.answer,\n            addRadioToState:props.addRadioToState,\n            addCheckboxToState:props.addCheckboxToState,\n            nextbuttonValue:props.nextbuttonValue,\n        };\n    }\n    \n    renderRadioButton(question, answers){\n        var lis = [];\n        for(var i = 0; i < answers.length ; i++) {\n            lis.push(<br/>);\n            lis.push(<div class=\"custom-control custom-radio left\"  >\n                        <input type=\"radio\" class=\"custom-control-input\" id={i} value={i} name=\"Radios\" checked={i===this.state.defaultRadiovalue}\n                        onChange={(event) => this.setState({defaultRadiovalue: event.target.value})}/>\n                        <label class=\"custom-control-label\" for={i}>{answers[i]}</label>\n                     </div>    \n                    );\n            lis.push(<br/>);\n            if(this.props.stage === \"CompMatchStandard\"){\n                lis.push(<div className=\"container\">\n                            <label className=\"left\">{\"[\"+this.props.description[i]+\"]\"}</label>\n                        </div>\n                    );\n                lis.push(<br/>);\n            }      \n        }   \n        return (\n            <div className=\"container\">\n                <hr color=\"#edf0f\"></hr>\n                <div className=\"container\" >\n                    <h3 className=\"left\">{question} </h3>   \n                </div>\n                <br/>\n                <div className=\"container\">\n                    {lis}\n                </div>\n                <div className=\"boxwell\"></div>\n                <br/>\n                <button type=\"button\" className=\"right\" onClick={this.onRadioButtonValueChange.bind(this)} class=\"btn btn-primary btn-lg\" >{this.props.nextbuttonValue}</button>\n            </div>\n          );\n    }\n    onRadioButtonValueChange() {\n        const que = this.props.question;\n        const ans = this.props.answer[this.state.defaultRadiovalue];\n        const typ = this.props.type;\n        const sta =this.props.stage;\n        if(ans === \"Standard\" || ans === \"Standard Template\" ){\n            this.setState({defaultRadiovalue:0});\n        }\n        this.state.addRadioToState({question:que, answer:ans, type:typ, stage:sta});\n    }\n    //Completed above Radiobutton Code\n    renderCheckbox(question, answers){\n        var lis = [];\n        lis.push(<br/>);\n        for(var i = 0; i < answers.length ; i++) {\n            lis.push(<div class=\"custom-control custom-checkbox left\">\n                        <input type=\"checkbox\" class=\"custom-control-input\" id={i} value={i} name=\"checboxes\" checked={this.state.defaultCheckboxValues.includes(i)}\n                        onChange={(event) => {    \n                            event.target.checked ? this.setState({defaultCheckboxValues:[...this.state.defaultCheckboxValues, Number(event.target.value)]}) :\n                                    this.setState({defaultCheckboxValues:[...this.state.defaultCheckboxValues.filter(index=>index!=event.target.value)]}) \n                                            }\n                        }/>\n                        <label class=\"custom-control-label\" for={i}>{answers[i]}</label>\n                     </div>    \n                    );\n            lis.push(<br/>);        \n        }   \n        return (\n            <div className=\"container\">\n                <hr color=\"#edf0f\"></hr>\n                <div className=\"container\">\n                    <h3 className=\"left\">{question} ?</h3>   \n                </div>\n                <br/>\n                <div className=\"container\">\n                    {lis}\n                </div>\n                <button type=\"button\" onClick={this.onCheckboxSelection.bind(this)} class=\"btn btn-primary btn-lg\" >{this.props.nextbuttonValue}</button>\n            </div>\n          );\n    }\n    onCheckboxSelection() {\n        const que = this.props.question;\n        const ans = this.state.defaultCheckboxValues.map(index => this.props.answer[index]);\n        const typ = this.props.type;\n        const sta =this.props.stage;\n        this.setState({defaultCheckboxValues:[0]});\n        this.state.addCheckboxToState({question:que, answer:ans, type:typ, stage:sta});\n    }\n    render(){\n        const {question, answer, stage} = this.props;\n        return(\n            <div>\n                <div className=\"sidenavwhite\">\n                    {\n                        stage===\"MerchantType\"? <div className=\"container blueColor\" ref=\"basic\">Basic Details</div>:\n                        <div className=\"container\">Basic Details</div> \n                    }\n                    <hr color=\"#edf0f\"></hr>\n                    <div className=\"container\" >Configure Pricing Strategy</div>\n                    <hr color=\"#edf0f\"></hr>\n                    <div className=\"container\" >Setup GLs</div>\n                    <hr color=\"#edf0f\"></hr>\n                    <div className=\"container\" >Finish up!</div>\n                </div>\n                {this.props.type === \"radio\" ? this.renderRadioButton(question,answer): null}\n                {this.props.type === \"checkbox\" ? this.renderCheckbox(question,answer): null}\n                \n            </div>\n        );\n    }\n}\n\nexport default QuestionAnswersTemplate;","/Users/sulmham/Desktop/Hackathon/hackstart/src/Components/GLSetTable.js",["57"],"import React, {Component} from 'react'\nimport './Welcome.css';\nclass GLSetTable extends Component{\n    constructor(props) {\n      super(props);\n      this.state={\n          stage: props.stage,\n          question: props.question,\n          rowHeadings: props.rowHeadings,\n          columnHeadings: props.columnHeadings,\n          answer:props.answer,\n          nextbuttonValue:props.nextbuttonValue,\n          addTableToState:props.addTableToState\n      }\n    }\n    onInputChange(event) {\n      const value = event.target.value.trim();\n      const row = event.target.id.split(/_/)[0];\n      const col = event.target.id.split(/_/)[1];\n      var arr = this.state.answer;\n      arr[row][col]=value;\n      this.setState({answer: arr});\n    }\n    render(){\n      const{question,columnHeadings, answer,rowHeadings,stage}= this.props;\n      var colheadlist = [];\n      colheadlist.push(<th></th>);\n      colheadlist.push(<th></th>);\n      for(var i = 0; i < columnHeadings.length ; i++) {\n        colheadlist.push(<th>{columnHeadings[i]}</th>);\n        colheadlist.push(<th></th>);\n      }\n      var rowList=[];\n      for(var j=0; j < rowHeadings.length ; j++) {\n        var rowValues =[];\n        rowValues.push(<td><b>{rowHeadings[j]}</b></td>);\n        rowValues.push(<td></td>);\n        for(var k=0;k<columnHeadings.length;k++){\n          rowValues.push(<td><input type=\"text\" id={j+\"_\"+k} value={answer[j][k]} onChange={this.onInputChange.bind(this)}/></td>);\n          rowValues.push(<td></td>);\n        }\n        rowList.push(<tr>{rowValues}</tr>);\n      }\n      return (\n        <div className=\"container\">\n          <div className=\"sidenavwhite\">\n                    {\n                        stage===\"MerchantType\"? <div className=\"container blueColor\" ref=\"basic\">Basic Details</div>:\n                        <div className=\"container\">Basic Details</div> \n                    }\n                    <hr color=\"#edf0f\"></hr>\n                    <div className=\"container\" >Configure Pricing Strategy</div>\n                    <hr color=\"#edf0f\"></hr>\n                    {\n                        stage===\"PriceVarianceGLTable\"? <div className=\"container blueColor\">Setup GLs</div>:\n                        <div className=\"container\">Setup GLs</div> \n                    }\n                    <hr color=\"#edf0f\"></hr>\n                    <div className=\"container\" >Finish up!</div>\n            </div>\n            <hr color=\"#edf0f\"></hr>\n            <div className=\"container\">\n                <h3 className=\"left\">{this.props.question} </h3>   \n            </div>\n            <br/>\n            <div className=\"container\">\n                <div class=\"table-responsive\">\n                      <table class=\"table table-hover\">\n                        <thead>\n                          <tr> {colheadlist} </tr>\n                        </thead>\n                        <tbody> {rowList} </tbody>\n                      </table>\n                </div>\n            </div>\n            <br/>\n            <button type=\"button\" className=\"right\" onClick={this.onTableSeletion.bind(this)} class=\"btn btn-primary btn-lg\" >{this.props.nextbuttonValue}</button>\n        </div>\n      );\n    }\n    onTableSeletion() {\n      const que = this.props.question;\n      const ans = this.state.answer;\n      const sta =this.props.stage;\n      this.setState({answer: ans});\n      console.log(que);\n      console.log(ans);\n      console.log(sta);\n      this.state.addTableToState({question:que, answer:ans, stage:sta});\n  }\n}\n\nexport default GLSetTable;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":6,"column":5,"nodeType":"64","messageId":"65","endLine":8,"endColumn":6},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":23,"nodeType":"70","messageId":"71","endLine":1,"endColumn":38},{"ruleId":"68","severity":1,"message":"72","line":7,"column":7,"nodeType":"70","messageId":"71","endLine":7,"endColumn":19},{"ruleId":"58","replacedBy":"73"},{"ruleId":"60","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":7,"column":1,"nodeType":"77","endLine":18,"endColumn":3},{"ruleId":"78","severity":1,"message":"79","line":75,"column":130,"nodeType":"80","messageId":"81","endLine":75,"endColumn":132},{"ruleId":"68","severity":1,"message":"82","line":25,"column":13,"nodeType":"70","messageId":"71","endLine":25,"endColumn":21},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["83"],["84"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'initialState' is assigned a value but never used.",["83"],["84"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'question' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]